apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: nextcloud
    meta.helm.sh/release-namespace: local-cloud
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: nextcloud
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mariadb
    app.kubernetes.io/part-of: mariadb
    app.kubernetes.io/version: 11.4.6
    helm.sh/chart: mariadb-20.5.5
  name: nextcloud-mariadb
  namespace: nextcloud
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: nextcloud
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/part-of: mariadb
  serviceName: nextcloud-mariadb-headless
  template:
    metadata:
      annotations:
        checksum/configuration: 466fae4e0287da273827a5451502c11337b54c99258faeafe156805ac38bdc4c
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: nextcloud
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/part-of: mariadb
        app.kubernetes.io/version: 11.4.6
        helm.sh/chart: mariadb-20.5.5
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: primary
                  app.kubernetes.io/instance: nextcloud
                  app.kubernetes.io/name: mariadb
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: 'false'
        - name: MARIADB_ROOT_PASSWORD_FILE
          value: /opt/bitnami/mariadb/secrets/mariadb-root-password
        - name: MARIADB_USER
          value: nextcloud
        - name: MARIADB_PASSWORD_FILE
          value: /opt/bitnami/mariadb/secrets/mariadb-password
        - name: MARIADB_DATABASE
          value: nextcloud
        - name: MARIADB_ENABLE_SSL
          value: 'no'
        image: docker.io/bitnami/mariadb:11.4.6-debian-12-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\n\
              fi\nmariadb-admin status -uroot -p\"${password_aux}\"\n"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - "password_aux=\"${MARIADB_ROOT_PASSWORD:-}\"\nif [[ -f \"${MARIADB_ROOT_PASSWORD_FILE:-}\"\
              \ ]]; then\n    password_aux=$(cat \"$MARIADB_ROOT_PASSWORD_FILE\")\n\
              fi\nmariadb-admin ping -uroot -p\"${password_aux}\"\n"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 2Gi
            memory: 768Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /opt/bitnami/mariadb/conf/my.cnf
          name: config
          subPath: my.cnf
        - mountPath: /opt/bitnami/mariadb/secrets/
          name: mariadb-credentials
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /opt/bitnami/mariadb/conf
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /opt/bitnami/mariadb/tmp
          name: empty-dir
          subPath: app-tmp-dir
        - mountPath: /opt/bitnami/mariadb/logs
          name: empty-dir
          subPath: app-logs-dir
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - -ec
        - "#!/bin/bash\n\n. /opt/bitnami/scripts/libfs.sh\n# We copy the logs folder\
          \ because it has symlinks to stdout and stderr\nif ! is_dir_empty /opt/bitnami/mariadb/logs;\
          \ then\n  cp -r /opt/bitnami/mariadb/logs /emptydir/app-logs-dir\nfi\n"
        command:
        - /bin/bash
        image: docker.io/bitnami/mariadb:11.4.6-debian-12-r0
        imagePullPolicy: IfNotPresent
        name: preserve-logs-symlinks
        resources:
          limits:
            cpu: 750m
            ephemeral-storage: 2Gi
            memory: 768Mi
          requests:
            cpu: 500m
            ephemeral-storage: 50Mi
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /emptydir
          name: empty-dir
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      serviceAccount: nextcloud-mariadb
      serviceAccountName: nextcloud-mariadb
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: empty-dir
      - configMap:
          defaultMode: 420
          name: nextcloud-mariadb
        name: config
      - name: mariadb-credentials
        secret:
          defaultMode: 420
          items:
          - key: mariadb-root-password
            path: mariadb-root-password
          - key: mariadb-password
            path: mariadb-password
          secretName: nextcloud-mariadb
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: nextcloud
        app.kubernetes.io/name: mariadb
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: local-path
      volumeMode: Filesystem
    status:
      phase: Pending
