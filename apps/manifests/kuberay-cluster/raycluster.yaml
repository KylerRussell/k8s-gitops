apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: distributed-ai-cluster
  namespace: kuberay-system
  labels:
    ray.io/cluster: distributed-ai-cluster
spec:
  # Ray version - use specific version for stability
  rayVersion: "2.30.0"
  
  # Enable autoscaling for dynamic workloads
  enableInTreeAutoscaling: true
  
  # Autoscaler configuration
  autoscalerOptions:
    # Scale down idle workers after 10 minutes (longer for big models)
    idleTimeoutSeconds: 600
    upscalingMode: Default
    resources:
      limits:
        cpu: "1000m"
        memory: "1Gi"
      requests:
        cpu: "500m"
        memory: "512Mi"
  
  # Head node - minimal resources, control plane only
  headGroupSpec:
    serviceType: ClusterIP
    
    rayStartParams:
      dashboard-host: "0.0.0.0"
      # CRITICAL: Set to "0" to prevent task scheduling on head
      num-cpus: "0"
      # Head memory - enough for GCS and dashboard
      memory: "32212254720"  # 30GB in bytes
      metrics-export-port: "8080"
      # Object store MUST be less than /dev/shm size
      object-store-memory: "17179869184"  # 16GB (leaving 4GB headroom from 20GB shm)
    
    template:
      metadata:
        labels:
          component: ray-head
          workload: distributed-ai
      spec:
        # Node affinity to spread across servers
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: component
                        operator: In
                        values:
                          - ray-head
                          - ray-worker
                  topologyKey: kubernetes.io/hostname
        
        initContainers:
          - name: fix-permissions
            image: busybox
            command: ["sh", "-c"]
            args:
              - |
                mkdir -p /models/.cache/huggingface &&
                chmod -R 777 /models
            volumeMounts:
              - mountPath: /models
                name: model-storage
        
        containers:
          - name: ray-head
            image: rayproject/ray:2.30.0
            imagePullPolicy: IfNotPresent
            
            # Head resources - control plane operations
            resources:
              limits:
                cpu: "8"
                memory: "32Gi"
              requests:
                cpu: "4"
                memory: "16Gi"
            
            ports:
              - containerPort: 6379
                name: gcs
                protocol: TCP
              - containerPort: 8265
                name: dashboard
                protocol: TCP
              - containerPort: 10001
                name: client
                protocol: TCP
              - containerPort: 8080
                name: metrics
                protocol: TCP
            
            # Health checks
            livenessProbe:
              httpGet:
                path: /api/version
                port: 8265
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
              failureThreshold: 3
            
            readinessProbe:
              httpGet:
                path: /api/version
                port: 8265
              initialDelaySeconds: 15
              periodSeconds: 10
              timeoutSeconds: 5
            
            # Graceful shutdown
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/sh", "-c", "ray stop"]
            
            # Environment for monitoring integration
            env:
              - name: RAY_GRAFANA_HOST
                value: "http://grafana.monitoring.svc:3000"
              - name: RAY_PROMETHEUS_HOST
                value: "http://prometheus.monitoring.svc:9090"
              # Memory management for large models
              - name: RAY_memory_monitor_refresh_ms
                value: "250"
              # Allow object store to use standard filesystem if needed
              - name: RAY_OBJECT_STORE_ALLOW_SLOW_STORAGE
                value: "1"
              # Hugging Face cache location
              - name: HF_HOME
                value: "/models/.cache/huggingface"
              - name: TRANSFORMERS_CACHE
                value: "/models/.cache/huggingface/transformers"
            
            # Volume mounts
            volumeMounts:
              - name: dshm
                mountPath: /dev/shm
              - name: model-storage
                mountPath: /models
        
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
              sizeLimit: 20Gi
          # Persistent storage for AI models (uses local disk)
          - name: model-storage
            hostPath:
              path: /var/lib/models
              type: DirectoryOrCreate

  # Worker group - MAXIMIZED for 235B models at BF16
  workerGroupSpecs:
    - groupName: ai-workers
      # CHANGED: 2 workers (one per non-control-plane node)
      replicas: 2
      minReplicas: 0
      maxReplicas: 2
      
      rayStartParams:
        # Workers use full resources - auto-detected from limits
        metrics-export-port: "8080"
        # Object store for computation (tensors, intermediate results)
        # Increased to 120GB per worker for large model inference
        object-store-memory: "128849018880"  # 120GB (leaving 30GB headroom from 150GB shm)
      
      template:
        metadata:
          labels:
            component: ray-worker
            workload: distributed-ai
            model-inference: "enabled"
        spec:
          # CRITICAL: Spread workers across different nodes
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: component
                        operator: In
                        values:
                          - ray-worker
                  topologyKey: kubernetes.io/hostname

          initContainers:
            - name: fix-permissions
              image: busybox
              command: ["sh", "-c"]
              args:
                - |
                  mkdir -p /models/.cache/huggingface &&
                  chmod -R 777 /models
              volumeMounts:
                - mountPath: /models
                  name: model-storage
            
            # NEW: Install transformers persistently
            - name: install-transformers
              image: rayproject/ray:2.30.0
              command: ["/bin/bash", "-c"]
              args:
                - |
                  echo "Installing transformers and dependencies..."
                  pip install --no-cache-dir transformers>=4.47.0 accelerate
                  echo "Installation complete!"
                  touch /tmp/transformers-installed
              volumeMounts:
                - mountPath: /tmp
                  name: ray-temp
          
          containers:
            - name: ray-worker
              image: rayproject/ray:2.30.0
              imagePullPolicy: IfNotPresent
              
              # MAXIMIZED resources for 235B model at BF16 (~470GB)
              # Each worker: 60 cores, 240GB RAM
              # 2 workers = 120 cores, 480GB RAM total
              resources:
                limits:
                  cpu: "60"         # Maximum CPU per worker
                  memory: "250Gi"   # Increased to use more of node's 252GB
                requests:
                  cpu: "55"         # Request slightly lower
                  memory: "240Gi"   # Request slightly lower
              
              ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
              
              # Health monitoring
              livenessProbe:
                tcpSocket:
                  port: 8080
                initialDelaySeconds: 30
                periodSeconds: 30
                timeoutSeconds: 10
                failureThreshold: 5
              
              # Graceful shutdown with extended timeout for large models
              lifecycle:
                preStop:
                  exec:
                    command: ["/bin/sh", "-c", "ray stop"]
              
              # Environment optimizations for large AI models
              env:
                # Memory management
                - name: RAY_memory_monitor_refresh_ms
                  value: "250"
                # Object spilling to disk for memory pressure
                - name: RAY_object_spilling_config
                  value: '{"type":"filesystem","params":{"directory_path":"/tmp/ray"}}'
                # Optimize for large objects (model weights)
                - name: RAY_max_direct_call_object_size
                  value: "100000000"  # 100MB
                # Plasma store configuration
                - name: RAY_plasma_store_socket_name
                  value: "/tmp/ray/plasma_store"
                # Allow slow storage as fallback
                - name: RAY_OBJECT_STORE_ALLOW_SLOW_STORAGE
                  value: "1"
                # Hugging Face cache on persistent storage
                - name: HF_HOME
                  value: "/models/.cache/huggingface"
                - name: TRANSFORMERS_CACHE
                  value: "/models/.cache/huggingface/transformers"
                # PyTorch optimizations
                - name: OMP_NUM_THREADS
                  value: "60"
                - name: MKL_NUM_THREADS
                  value: "60"
              
              # Volume mounts
              volumeMounts:
                - name: dshm
                  mountPath: /dev/shm
                - name: ray-temp
                  mountPath: /tmp/ray
                - name: model-storage
                  mountPath: /models
          
          volumes:
            - name: dshm
              emptyDir:
                medium: Memory
                # 150GB shared memory per worker for large tensors
                sizeLimit: 150Gi
            - name: ray-temp
              emptyDir:
                sizeLimit: 100Gi  # Spillover storage for large models
            # Persistent storage for AI models (shared across workers)
            - name: model-storage
              hostPath:
                path: /var/lib/models
                type: DirectoryOrCreate
